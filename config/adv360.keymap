/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        left_bracket_morph: left_bracket_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFT_BRACKET_MORPH";
            bindings = <&kp LEFT_BRACE>, <&kp LEFT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        right_bracket_morph: right_bracket_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHT_BRACKET_MORPH";
            bindings = <&kp RBRC>, <&kp RBKT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        quote_morph: quote_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "QUOTE_MORPH";
            bindings = <&kp DQT>, <&kp APOS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        underscore_mod_morph: underscore_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "UNDERSCORE_MOD_MORPH";
            bindings = <&kp UNDER>, <&kp MINUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        backslash_mod_morph: backslash_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSLASH_MOD_MORPH";
            bindings = <&kp PIPE>, <&kp BSLH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &tog 2                                                         &mo 4      &kp N6  &kp N7    &kp N8            &kp N9             &kp N0         &kp MINUS
&kp TAB    &kp Q      &kp W     &kp F     &kp P      &kp G   &to 1                                                          &none      &kp J   &kp L     &kp U             &kp Y              &kp SEMICOLON  &kp BSLH
&kp ESC    &kp A      &kp R     &kp S     &kp T      &kp D   &none     &kp LCTRL  &kp LALT            &kp LGUI   &kp RCTRL  &trans     &kp H   &kp N     &kp E             &kp I              &kp O          &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp UP_ARROW        &kp PG_UP                        &kp K   &kp M     &kp COMMA         &kp DOT            &kp FSLH       &kp RSHFT
&mo 3      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp DOWN_ARROW      &kp PG_DN  &kp ENTER  &kp SPACE          &kp RALT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp END        &mo 3
            >;
        };

        symb {
            bindings = <
&kp EQUAL  &kp EXCL   &kp AT    &kp HASH  &kp DLLR   &kp PRCNT  &tog 2                                                         &mo 4      &kp CARET  &kp AMPS  &kp ASTRK            &kp LPAR              &kp RPAR       &underscore_mod_morph
&kp TAB    &kp Q      &kp W     &kp F     &kp P      &kp G      &to 0                                                          &none      &kp J      &kp L     &kp U                &kp Y                 &kp SEMICOLON  &backslash_mod_morph
&kp ESC    &kp A      &kp R     &kp S     &kp T      &kp D      &none     &kp LCTRL  &kp LALT            &kp LGUI   &kp RCTRL  &none      &kp H      &kp N     &kp E                &kp I                 &kp O          &quote_morph
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                           &kp UP_ARROW        &kp PG_UP                        &kp K      &kp M     &kp COMMA            &kp DOT               &kp FSLH       &kp RSHFT
&mo 3      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT             &kp BSPC  &kp DEL    &kp DOWN_ARROW      &kp PG_DN  &kp ENTER  &kp SPACE             &kp RALT  &left_bracket_morph  &right_bracket_morph  &kp END        &mo 3
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                       &mo 4      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp F     &kp P      &kp G   &none                                                        &none      &kp J   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp R     &kp S     &kp T      &kp D   &none     &kp LCTRL  &kp LALT          &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp UP_ARROW      &kp PG_UP                        &kp K   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 3      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp DOWN          &kp PG_DN  &kp ENTER  &kp KP_N0          &kp RALT    &kp END       &kp KP_DOT     &kp RBKT         &mo 3
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4     &kp F5    &kp F6  &tog 2                                      &mo 4   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans     &trans    &trans  &none                                       &none   &trans  &kp N7  &kp N8  &kp N9   &trans   &trans
&trans  &trans  &trans  &kp EQUAL  &kp PLUS  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &kp N4  &kp N5  &kp N6   &trans   &trans
&trans  &trans  &trans  &trans     &trans    &trans                  &trans      &trans                  &trans  &kp N1  &kp N2  &kp N3   &trans   &trans
&trans  &trans  &trans  &trans     &trans            &trans  &trans  &trans      &trans  &trans  &kp N0          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
